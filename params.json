{
  "name": "Motan",
  "tagline": "A remote procedure call(RPC) framework for rapid development of high performance distributed services.",
  "body": "# Motan\r\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/weibocom/motan/blob/master/LICENSE)\r\n[![Maven Central](https://img.shields.io/maven-central/v/com.weibo/motan.svg?label=Maven Central)](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.weibo%22%20AND%20motan)\r\n[![Build Status](https://img.shields.io/travis/weibocom/motan/master.svg?label=Build)](https://travis-ci.org/weibocom/motan)\r\n\r\n# Overview\r\nMotan is a remote procedure call(RPC) framework for rapid development of high performance distributed services.\r\n\r\n# Features\r\n- Create distributed services without writing extra code.\r\n- Provides cluster support and integrate with popular service discovery services like [Consul][consul] or [Zookeeper][zookeeper]. \r\n- Supports advanced scheduling features like weighted load-balance, scheduling cross IDCs, etc.\r\n- Optimization for high load scenarios, provides high availability in production environment.\r\n\r\n# Quick Start\r\n\r\nThe quick start gives very basic example of running client and server on the same machine. For the detailed information about using and developing Motan, please jump to [Documents](#documents).\r\n\r\n> The minimum requirements to run the quick start are: \r\n>  * JDK 1.6 or above\r\n>  * A java-based project management software like [Maven][maven] or [Gradle][gradle]\r\n\r\n1. Add dependency to pom\r\n\r\n   ```xml\r\n    <dependency>\r\n        <groupId>com.weibo</groupId>\r\n        <artifactId>motan-core</artifactId>\r\n        <version>0.0.1</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.weibo</groupId>\r\n        <artifactId>motan-transport-netty</artifactId>\r\n        <version>0.0.1</version>\r\n    </dependency>\r\n\r\n    <!-- dependencies blow were only needed for spring-based features -->\r\n    <dependency>\r\n        <groupId>com.weibo</groupId>\r\n        <artifactId>motan-springsupport</artifactId>\r\n        <version>0.0.1</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>org.springframework</groupId>\r\n        <artifactId>spring-context</artifactId>\r\n        <version>4.2.4.RELEASE</version>\r\n    </dependency>\r\n   ```\r\n\r\n2. Create an interface for both service provider and consumer.\r\n\r\n    `src/main/java/quickstart/FooService.java`  \r\n\r\n    ```java\r\n    package quickstart;\r\n\r\n    public interface FooService {\r\n        public String hello(String name);\r\n    }\r\n    ```\r\n\r\n3. Implement service provider.\r\n\r\n\r\n    `src/main/java/quickstart/FooServiceImpl.java`\r\n    \r\n    ```java\r\n    package quickstart;\r\n    \r\n    import org.springframework.context.ApplicationContext;\r\n    import org.springframework.context.support.ClassPathXmlApplicationContext;\r\n    \r\n    public class FooServiceImpl implements FooService {\r\n    \r\n        public String hello(String name) {\r\n            System.out.println(name + \" invoked rpc service\");\r\n            return \"hello \" + name;\r\n        }\r\n    \r\n        public static void main(String[] args) throws InterruptedException {\r\n            ApplicationContext applicationContext = new ClassPathXmlApplicationContext(\"classpath:motan_server.xml\");\r\n            System.out.println(\"server start...\");\r\n        }\r\n    }\r\n    ```\r\n    \r\n    `src/main/resources/motan_server.xml`\r\n    \r\n    ```xml\r\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n    \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    \txmlns:motan=\"http://api.weibo.com/schema/motan\"\r\n    \txsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\r\n       http://api.weibo.com/schema/motan http://api.weibo.com/schema/motan.xsd\">\r\n\r\n        <!-- service implemention bean -->\r\n        <bean id=\"serviceImpl\" class=\"quickstart.FooServiceImpl\" />\r\n        <!-- exporting service by motan -->\r\n        <motan:service interface=\"quickstart.FooService\" ref=\"serviceImpl\" export=\"8002\" />\r\n    </beans>\r\n    ```\r\n    \r\n    Execute main function in FooServiceImpl will start a motan server listening on port 8002.\r\n\r\n4. The service consumer\r\n\r\n    `src/main/resources/motan_client.xml`\r\n\r\n    ```xml\r\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xmlns:motan=\"http://api.weibo.com/schema/motan\"\r\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\r\n       http://api.weibo.com/schema/motan http://api.weibo.com/schema/motan.xsd\">\r\n\r\n        <!-- reference to the remote service -->\r\n        <motan:referer id=\"remoteService\" interface=\"quickstart.FooService\" directUrl=\"localhost:8002\"/>\r\n    </beans>\r\n    ```\r\n\r\n    `src/main/java/quickstart/Client.java`\r\n\r\n    ```java\r\n    package quickstart;\r\n\r\n    import org.springframework.context.ApplicationContext;\r\n    import org.springframework.context.support.ClassPathXmlApplicationContext;\r\n\r\n\r\n    public class Client {\r\n    \r\n        public static void main(String[] args) throws InterruptedException {\r\n            ApplicationContext ctx = new ClassPathXmlApplicationContext(\"classpath:motan_client.xml\");\r\n            FooService service = (FooService) ctx.getBean(\"remoteService\");\r\n            System.out.println(service.hello(\"motan\"));\r\n        }\r\n    }\r\n    ```\r\n    \r\n    Execute main function in Client will invoke the remote service and print response.\r\n\r\n\r\n# Documents\r\n\r\n* [Wiki](https://github.com/weibocom/motan/wiki)\r\n* [Wiki(中文)](https://github.com/weibocom/motan/wiki/zh_overview)\r\n\r\n# Contributors\r\n\r\n* maijunsheng([@maijunsheng](https://github.com/maijunsheng))\r\n* fishermen([@hustfisher](https://github.com/hustfisher))\r\n* TangFulin([@tangfl](https://github.com/tangfl))\r\n* bodlyzheng([@bodlyzheng](https://github.com/bodlyzheng))\r\n* wangyu1\r\n* zenglingshu([@zenglingshu](https://github.com/zenglingshu))\r\n* Sugar Zouliu([@lamusicoscos](https://github.com/lamusicoscos))\r\n* tangyang([@tangyang](https://github.com/tangyang))\r\n* olivererwang([@olivererwang](https://github.com/olivererwang))\r\n* jackael([@jackael9856](https://github.com/jackael9856))\r\n* Ray([@rayzhang0603](https://github.com/rayzhang0603))\r\n* r2dx([@half-dead](https://github.com/half-dead))\r\n* axb([@qdaxb](https://github.com/qdaxb))\r\n* wenqisun([@wenqisun](https://github.com/wenqisun))\r\n* fingki([@fingki](https://github.com/fingki))\r\n\r\n# License\r\n\r\nMotan is released under the [Apache License 2.0](http://www.apache.org/licenses/LICENSE-2.0).\r\n\r\n[maven]:https://maven.apache.org\r\n[gradle]:http://gradle.org\r\n[consul]:http://www.consul.io\r\n[zookeeper]:http://zookeeper.apache.org\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}